Vagrant::Config.run do |config|
  require "./.config/config"

  count_vms = 0
  Vm.descendants.each do |vm|
    count_vms += 1
    (1..vm::Count).each do |index|
      # Set counters
      count = ""
      formatted_count = ""
      if vm::Count > 1
        count = "#{index}"
        formatted_count = "(#{index} of #{vm::Count})"
      end

      config.vm.define "#{vm::Shortname}#{formatted_count}" do |vm_config|

        vm_config.vm.box = vm::Basebox
        vm_config.vm.box_url = vm::Box_url
        vm_config.vm.auto_port_range = Conf::SSH_range
        vm_config.vm.network :hostonly, "#{Conf::Network}.#{Conf::Subnet}.#{Conf::Host_IP + ((count_vms - 1) * 10) + index - 1}"
        hostname = "#{vm::Shortname}#{count}.#{Conf::Project}.#{vm::Domain}"
        vm_config.vm.host_name = hostname
        vm_config.vm.customize ["modifyvm", :id, "--name", "[#{Conf::Project}] #{vm::Longname}#{formatted_count} (#{hostname})"]
        vm_config.vm.customize ["modifyvm", :id, "--memory", "#{vm::Memory}"]
        if defined?(vm::NFS_shares)
          vm::NFS_shares.each do |name, path|
            vm_config.vm.share_folder(name, path, "./#{name}", { :nfs => true, :create => true, :remount => true })
          end
        end
        if vm::Gui == true
          vm_config.vm.boot_mode = :gui
        end

        if File::exists?("#{vm::Manifests}/#{vm::Shortname}.pp")
          vm_config.vm.provision :puppet do |puppet|
            puppet.manifest_file = "#{vm::Shortname}.pp"
            puppet.module_path   = [ "#{vm::Modules}" , "#{Conf::Modules}" ]
            puppet.facter = Conf::Facts | vm::Facts
            puppet.options = vm::Options
            if vm::Debug == true
              puppet.options = puppet.options + " --debug"
            end
            if vm::Verbose == true
              puppet.options = puppet.options + " --verbose"
            end
          end
        end

      end

    end
  end

end
